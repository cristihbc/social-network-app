var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.056,1,0.611]],["body/components/AppComponent.html",[0,0.092,1,1.067,2,1.417,3,0.412,4,0.349,5,1.22,6,1.22,7,1.22,8,0.349,9,2.838,10,1.22,11,1.059,12,0.941,13,3.66,14,0.808,15,4.458,16,0.349,17,0.808,18,4.935,19,0.412,20,0.041,21,0.627,22,2.43,23,2.43,24,1.099,25,3.457,26,0.412,27,0.349,28,0.412,29,0.412,30,0.888,31,1.574,32,1.574,33,1.22,34,1.657,35,1.22,36,1.275,37,1.22,38,0.627,39,1.22,40,0.708,41,1.22,42,0.794,43,1.22,44,0.708,45,1.22,46,0.794,47,1.099,48,1.22,49,0.627,50,1.22,51,0.794,52,1.22,53,0.794,54,1.22,55,1.22,56,1.22,57,0.024,58,0.03,59,0.024]],["title/modules/AppModule.html",[60,1.625,61,1.625]],["body/modules/AppModule.html",[0,0.096,1,1.14,3,0.296,4,0.25,8,0.25,20,0.042,26,0.679,27,0.25,28,0.296,29,0.296,30,0.637,38,0.934,40,1.054,42,1.183,44,1.054,46,1.149,47,0.789,49,0.934,51,1.183,53,1.183,57,0.017,58,0.024,59,0.017,60,1.351,61,3.22,62,1.351,63,1.351,64,2.923,65,2.556,66,2.264,67,2.5,68,2.037,69,2.037,70,2.037,71,2.037,72,1.024,73,2.5,74,1.745,75,1.526,76,2.482,77,2.482,78,1.745,79,1.745,80,2.92,81,4.157,82,4.157,83,1.351,84,3.557,85,2.482,86,0.57,87,2.482,88,0.876,89,2.037,90,1.745,91,2.482,92,2.482,93,2.482,94,2.482,95,2.482,96,2.482,97,2.482,98,0.789,99,2.482,100,2.037,101,2.482,102,2.482,103,2.037,104,2.037,105,2.482,106,2.482,107,4.229,108,2.482,109,2.482,110,0.71,111,2.5,112,0.876,113,1.526,114,1.526,115,2.482,116,1.351]],["title/modules/AppServerModule.html",[60,1.625,117,1.834]],["body/modules/AppServerModule.html",[1,1.171,3,0.446,4,0.377,8,0.377,20,0.041,26,0.659,27,0.377,28,0.446,29,0.446,30,0.96,57,0.025,58,0.032,59,0.025,60,2.036,61,3.07,62,2.036,63,2.036,64,2.628,65,3.147,66,2.036,67,2.628,73,3.294,74,2.628,75,2.299,78,2.628,80,3.847,89,3.069,100,3.847,117,3.518,118,3.069,119,3.738,120,3.738,121,3.738,122,4.686,123,2.628,124,4.686,125,3.069,126,2.036,127,3.069,128,3.069,129,3.738]],["title/injectables/BurritoService.html",[72,0.611,130,1.834]],["body/injectables/BurritoService.html",[3,0.365,4,0.309,8,0.309,13,2.515,16,0.309,17,0.747,19,0.593,20,0.041,21,0.969,24,1.787,26,0.365,27,0.309,28,0.365,29,0.365,36,1.177,57,0.021,58,0.028,59,0.021,72,0.843,130,2.531,131,3.063,132,2.515,133,1.787,134,5.621,135,2.859,136,4.65,137,1.192,138,1.794,139,4.972,140,4.972,141,4.972,142,4.117,143,4.117,144,0.952,145,4.117,146,3.063,147,2.261,148,3.285,149,3.063,150,3.063,151,4.117,152,3.063,153,1.453,154,1.453,155,4.117,156,1.794,157,4.117,158,3.063,159,3.063,160,3.063,161,3.063,162,4.65,163,2.153,164,4.117,165,1.884,166,4.65,167,4.117]],["title/interfaces/Comment.html",[168,0.414,169,1.625]],["body/interfaces/Comment.html",[0,0.068,3,0.305,4,0.257,8,0.257,11,0.463,12,0.407,14,0.463,16,0.257,17,0.658,19,0.58,20,0.042,21,1.048,26,0.504,27,0.257,28,0.305,29,0.305,38,0.463,57,0.029,58,0.025,59,0.017,72,0.864,86,0.587,98,0.811,116,1.39,126,1.976,133,1.154,137,1.193,144,0.523,165,2.597,168,0.504,169,1.976,170,1.113,171,1.57,172,3.85,173,2.988,174,3.549,175,3.549,176,2.036,177,0.932,178,0.655,179,0.932,180,1.795,181,0.587,182,1.795,183,0.901,184,1.795,185,0.901,186,1.795,187,2.3,188,1.795,189,1.795,190,1.247,191,0.73,192,0.655,193,1.795,194,1.241,195,2.551,196,3.104,197,1.113,198,0.901,199,1.795,200,1.795,201,1.113,202,1.795,203,1.795,204,1.001,205,1.795,206,1.795,207,0.901,208,1.795,209,1.795,210,1.57,211,1.57,212,2.551,213,1.795,214,2.969,215,2.052,216,1.795,217,1.39,218,1.795,219,1.795,220,1.795,221,1.795,222,1.57,223,1.795,224,1.795,225,1.795,226,1.795,227,1.241,228,1.795,229,1.795,230,1.795,231,1.795,232,1.795,233,1.795]],["title/components/FeedComponent.html",[0,0.056,38,0.541]],["body/components/FeedComponent.html",[0,0.054,1,0.286,2,0.726,3,0.166,4,0.141,5,0.493,6,0.493,7,0.493,8,0.141,10,0.493,11,0.863,12,0.759,14,0.414,16,0.141,17,0.414,19,0.499,20,0.042,21,0.944,24,1.545,26,0.346,27,0.141,28,0.166,29,0.166,30,0.358,31,0.806,32,0.806,33,0.493,34,1.064,35,0.493,36,1.134,37,0.493,38,0.607,39,0.493,40,0.286,41,0.493,42,0.321,43,0.493,44,0.286,45,0.493,46,0.321,47,0.444,48,0.493,49,0.253,50,0.493,51,0.321,52,0.493,53,0.321,54,0.493,55,0.493,56,0.493,57,0.02,58,0.016,59,0.009,72,0.812,86,0.321,98,0.444,116,1.243,126,1.578,133,0.726,137,0.769,138,0.995,144,0.467,147,1.609,153,1.182,154,1.182,156,1.609,165,1.782,168,0.317,169,1.578,171,0.858,172,3.269,173,1.404,174,2.037,175,2.596,176,1.136,177,0.86,178,0.358,179,0.744,180,1.605,181,0.525,182,2.037,183,0.806,184,2.037,185,1.023,186,2.037,187,1.823,188,2.037,189,2.037,190,1.16,191,0.829,192,0.358,193,0.981,194,2.26,195,1.605,196,2.438,197,0.608,198,0.493,199,0.981,200,0.981,201,0.608,202,0.981,203,0.981,204,0.547,205,0.981,206,0.981,207,1.182,208,1.605,209,0.981,210,0.858,211,0.858,212,1.605,213,0.981,214,2.037,215,1.408,216,2.354,217,0.76,218,0.981,219,0.981,220,0.981,221,0.981,222,0.858,223,0.981,224,0.981,225,1.605,226,2.037,227,0.678,228,0.981,229,0.981,230,1.605,231,0.981,232,0.981,233,0.981,234,0.608,235,3.348,236,3.348,237,2.283,238,1.146,239,2.283,240,1.395,241,1.395,242,1.395,243,1.395,244,1.395,245,1.395,246,1.395,247,1.395,248,1.395,249,1.395,250,2.283,251,2.283,252,2.283,253,2.283,254,2.283,255,2.283,256,3.693,257,2.749,258,1.395,259,1.395,260,1.395,261,3.965,262,1.605,263,2.283,264,2.898,265,3.965,266,0.981,267,0.981,268,1.874,269,1.395,270,3.909,271,4.185,272,2.379,273,2.283,274,1.395,275,1.395,276,2.283,277,3.585,278,3.965,279,1.395,280,1.395,281,2.749,282,3.436,283,1.395,284,1.146,285,3.817,286,3.032,287,1.874,288,2.283,289,1.395,290,1.395,291,1.395,292,3.693,293,2.283,294,1.874,295,1.395,296,3.965,297,1.395,298,1.395,299,3.965,300,2.283,301,1.395,302,2.283,303,3.348,304,1.395,305,2.283,306,1.395,307,1.146,308,2.283,309,1.146,310,1.146,311,1.395,312,1.605,313,1.605,314,2.283,315,1.395,316,1.395,317,2.283,318,2.283,319,3.71,320,1.395,321,2.283,322,1.395,323,1.395,324,1.395,325,1.395,326,2.283,327,1.395,328,1.395,329,1.395,330,1.395,331,1.395,332,1.395,333,2.283,334,1.395,335,1.395,336,2.283,337,1.395,338,1.395,339,1.146,340,1.395,341,1.395]],["title/interfaces/Friend.html",[112,1.053,168,0.414]],["body/interfaces/Friend.html",[0,0.086,3,0.437,4,0.369,8,0.369,11,0.664,12,0.584,14,0.664,16,0.369,17,0.839,19,0.605,20,0.041,21,1.062,26,0.552,27,0.369,28,0.437,29,0.437,40,0.75,57,0.031,58,0.031,59,0.025,86,0.841,112,1.879,137,1.224,168,0.508,170,1.596,177,1.187,178,0.94,179,0.94,181,0.841,190,0.94,192,0.94,342,2.574,343,4.372,344,3.744,345,3.006,346,3.006,347,2.574,348,1.994,349,1.994,350,1.779,351,3.006,352,1.994,353,1.435,354,1.994]],["title/interfaces/Friend-1.html",[112,0.884,168,0.348,355,1.54]],["body/interfaces/Friend-1.html",[0,0.075,3,0.356,4,0.301,8,0.301,11,0.54,12,0.475,14,0.54,16,0.301,17,0.733,19,0.482,20,0.042,21,1.068,26,0.613,27,0.301,28,0.356,29,0.356,49,0.54,57,0.031,58,0.028,59,0.02,72,0.939,86,0.685,88,1.052,98,0.947,110,1.406,112,1.618,133,1.457,135,1.832,137,1.217,144,0.61,148,1.832,168,0.561,170,1.299,176,1.168,177,1.038,178,0.765,179,1.038,181,0.685,183,1.052,185,1.052,190,1.038,191,0.852,192,0.765,197,1.299,198,1.052,201,1.299,207,1.052,215,1.448,227,1.448,348,2.201,350,1.964,352,1.623,353,1.168,356,1.832,357,3.456,358,2.841,359,2.095,360,2.095,361,2.095,362,2.095,363,2.841,364,1.623,365,2.841,366,2.095,367,2.095,368,2.095,369,2.095,370,2.095,371,2.095,372,2.095,373,2.095,374,2.095,375,2.095,376,2.095,377,2.095,378,1.448,379,1.448,380,1.299,381,1.299,382,1.299,383,1.299,384,1.299,385,1.299]],["title/components/FriendComponent.html",[0,0.056,40,0.611]],["body/components/FriendComponent.html",[0,0.079,1,0.522,2,1.152,3,0.304,4,0.257,5,0.899,6,0.899,7,0.899,8,0.257,10,0.899,11,1.004,12,0.883,14,0.657,16,0.257,17,0.657,19,0.432,20,0.041,21,0.915,24,1.152,26,0.432,27,0.257,28,0.304,29,0.304,30,0.654,31,1.279,32,1.279,33,0.899,34,1.461,35,0.899,36,1.206,37,0.899,38,0.462,39,0.899,40,0.941,41,0.899,42,0.586,43,0.899,44,0.522,45,0.899,46,0.586,47,0.81,48,0.899,49,0.462,50,0.899,51,0.586,52,0.899,53,0.586,54,0.899,55,0.899,56,0.899,57,0.025,58,0.025,59,0.017,86,0.586,112,1.905,137,1.116,144,0.522,153,0.899,154,0.899,168,0.354,173,2.229,177,1.18,178,0.654,179,0.654,181,0.833,190,1.083,191,0.729,192,0.654,194,1.762,234,1.111,257,2.976,262,1.791,266,1.791,267,1.791,268,2.092,270,3.463,272,2.092,277,2.092,281,2.092,282,2.976,284,3.773,286,2.092,287,2.092,307,3.773,309,2.976,310,3.463,312,2.548,313,2.548,339,2.976,342,1.791,343,2.092,344,1.791,345,2.976,346,3.463,347,2.966,348,2.644,349,1.974,350,1.238,351,2.092,352,1.388,353,0.999,354,1.388,386,3.625,387,2.548,388,2.092,389,3.625,390,2.976,391,3.625,392,3.625,393,2.548,394,3.625,395,2.092,396,2.092,397,2.548,398,2.548,399,2.548,400,2.548,401,2.548,402,2.548,403,2.548,404,2.548,405,2.548,406,2.548,407,2.548,408,2.548]],["title/components/HomeComponent.html",[0,0.056,42,0.685]],["body/components/HomeComponent.html",[0,0.089,1,0.655,2,1.348,3,0.382,4,0.323,5,1.13,6,1.13,7,1.13,8,0.323,10,1.13,11,1.047,12,0.92,14,0.769,16,0.323,19,0.382,20,0.041,24,1.348,26,0.506,27,0.323,28,0.382,29,0.382,30,0.822,31,1.496,32,1.496,33,1.13,34,1.609,35,1.13,36,1.447,37,1.13,38,0.58,39,1.13,40,0.655,41,1.13,42,1.163,43,1.13,44,0.655,45,1.13,46,0.735,47,1.017,48,1.13,49,0.58,50,1.13,51,0.735,52,1.13,53,0.735,54,1.13,55,1.13,56,1.13,57,0.022,58,0.029,59,0.022,88,1.13,107,3.48,113,2.607,114,2.607,138,1.848,144,0.655,147,1.395,153,1.496,154,1.496,156,1.395,409,2.628,410,4.24,411,4.24,412,4.24,413,3.201,414,3.326,415,3.201,416,4.24,417,3.201,418,2.628,419,3.201,420,4.24]],["title/components/LoginComponent.html",[0,0.056,44,0.611]],["body/components/LoginComponent.html",[0,0.075,1,0.476,2,1.078,3,0.277,4,0.234,5,0.82,6,0.82,7,0.82,8,0.234,10,0.82,11,0.986,12,0.866,14,0.615,16,0.234,17,0.615,19,0.478,20,0.042,21,1.006,24,1.554,26,0.559,27,0.234,28,0.277,29,0.277,30,0.597,31,1.197,32,1.197,33,0.82,34,1.489,35,0.82,36,1.259,37,0.82,38,0.421,39,0.82,40,0.476,41,0.82,42,0.534,43,0.82,44,0.901,45,0.82,46,0.534,47,0.739,48,0.82,49,0.421,50,0.82,51,0.534,52,0.82,53,0.534,54,0.82,55,0.82,56,0.82,57,0.023,58,0.023,59,0.016,72,1.034,83,1.265,86,0.534,88,0.82,98,0.739,110,1.145,114,2.708,133,1.273,137,0.92,138,1.478,144,0.694,147,1.746,153,1.197,154,1.197,156,1.746,168,0.323,176,0.911,177,1.131,178,0.597,179,1.028,181,0.779,183,1.197,185,1.414,190,1.131,191,0.97,192,0.597,198,0.82,204,1.57,207,1.554,217,1.265,234,1.013,349,1.265,353,0.911,354,1.265,364,1.265,378,1.129,379,1.129,380,1.013,381,1.013,382,1.746,383,1.013,384,1.013,385,1.013,414,3.105,421,1.634,422,3.288,423,2.784,424,2.816,425,3.392,426,3.096,427,3.392,428,2.784,429,2.324,430,2.324,431,2.324,432,3.096,433,2.324,434,2.816,435,1.634,436,1.634,437,1.634,438,1.634,439,1.908,440,1.908,441,2.784,442,1.908,443,1.908,444,1.908,445,1.908,446,1.908,447,1.908,448,1.908,449,1.908,450,1.908,451,1.908]],["title/components/NavMenuComponent.html",[0,0.056,46,0.685]],["body/components/NavMenuComponent.html",[0,0.078,1,0.512,2,1.136,3,0.298,4,0.252,5,0.882,6,0.882,7,0.882,8,0.252,10,0.882,11,1.001,12,0.88,14,0.648,16,0.252,17,0.648,19,0.426,20,0.041,21,0.648,22,1.757,23,1.757,24,1.593,26,0.426,27,0.252,28,0.298,29,0.298,30,0.642,31,1.608,32,1.262,33,0.882,34,1.448,35,0.882,36,1.193,37,0.882,38,0.453,39,0.882,40,0.512,41,0.882,42,0.574,43,0.882,44,0.512,45,0.882,46,1.047,47,1.678,48,0.882,49,0.453,50,0.882,51,0.574,52,0.882,53,0.574,54,0.882,55,0.882,56,0.882,57,0.017,58,0.024,59,0.017,72,1.026,90,3.628,98,0.794,113,2.198,116,1.947,138,1.558,144,0.512,147,1.819,153,0.882,154,0.882,156,1.819,163,2.934,181,0.821,194,2.028,196,1.537,197,1.089,201,1.558,234,1.089,238,2.052,262,1.757,266,2.513,267,2.513,285,2.052,294,2.052,312,2.513,313,2.513,319,2.052,395,2.052,396,2.052,418,2.052,452,4.237,453,2.052,454,3.575,455,4.174,456,3.575,457,4.174,458,4.174,459,4.555,460,5.013,461,4.555,462,3.575,463,2.499,464,2.499,465,2.499,466,2.499,467,3.575,468,4.174,469,2.499,470,2.935,471,2.499,472,2.499,473,2.499,474,2.499,475,2.499,476,2.499,477,2.499,478,3.575,479,2.499,480,2.499,481,2.499,482,2.499,483,2.499,484,2.499]],["title/interfaces/Post.html",[168,0.414,187,1.625]],["body/interfaces/Post.html",[0,0.068,3,0.308,4,0.261,8,0.261,11,0.469,12,0.412,14,0.469,16,0.261,17,0.664,19,0.552,20,0.042,21,1.05,26,0.507,27,0.261,28,0.308,29,0.308,38,0.469,57,0.029,58,0.025,59,0.018,72,0.87,86,0.594,98,0.822,116,1.408,126,1.994,133,1.164,137,1.198,144,0.529,165,2.615,168,0.508,169,1.408,170,1.127,171,1.59,172,3.861,173,3.002,174,3.564,175,2.989,176,1.913,177,0.94,178,0.664,179,0.94,180,1.817,181,0.594,182,1.817,183,0.912,184,1.817,185,0.912,186,1.817,187,2.519,188,1.817,189,1.817,190,1.253,191,0.739,192,0.664,193,1.817,194,1.256,195,2.574,196,3.117,197,1.127,198,0.912,199,1.817,200,1.817,201,1.127,202,1.817,203,1.817,204,1.013,205,1.817,206,1.817,207,0.912,208,1.817,209,1.817,210,1.59,211,1.59,212,2.574,213,1.817,214,2.989,215,2.067,216,1.817,217,1.408,218,1.817,219,1.817,220,1.817,221,1.817,222,1.59,223,1.817,224,1.817,225,1.817,226,1.817,227,1.256,228,1.817,229,1.817,230,1.817,231,1.817,232,1.817,233,1.817]],["title/components/ProfileComponent.html",[0,0.056,49,0.541]],["body/components/ProfileComponent.html",[0,0.07,1,0.423,2,0.988,3,0.246,4,0.208,5,0.729,6,0.729,7,0.729,8,0.208,10,0.729,11,0.96,12,0.844,14,0.563,16,0.208,17,0.563,19,0.559,20,0.042,21,1.016,24,1.59,26,0.532,27,0.208,28,0.246,29,0.246,30,0.53,31,1.097,32,1.097,33,0.729,34,1.321,35,0.729,36,1.43,37,0.729,38,0.374,39,0.729,40,0.423,41,0.729,42,0.474,43,0.729,44,0.423,45,0.729,46,0.474,47,0.656,48,0.729,49,0.754,50,0.729,51,0.474,52,0.729,53,0.474,54,0.729,55,0.729,56,0.729,57,0.025,58,0.021,59,0.014,72,0.995,86,0.474,88,0.729,98,0.656,110,1.463,112,1.319,133,1.187,135,2.297,137,1.117,138,1.354,144,0.636,147,1.354,148,1.911,153,1.097,154,1.097,156,1.354,168,0.431,176,0.809,177,1.067,178,0.53,179,0.959,181,0.714,183,1.097,185,1.319,190,1.067,191,1.068,192,0.53,197,0.9,198,0.729,201,1.354,207,1.467,215,1.003,227,1.003,234,0.9,344,1.451,348,2.263,350,1.51,352,1.124,353,0.809,356,1.27,357,1.451,358,2.922,359,1.451,360,2.184,361,2.626,362,2.184,363,2.184,364,1.124,365,2.184,366,1.451,367,1.451,368,1.451,369,1.451,370,1.451,371,1.451,372,1.451,373,1.451,374,2.184,375,1.451,376,1.451,377,1.451,378,1.003,379,1.003,380,1.628,381,1.628,382,0.9,383,0.9,384,0.9,385,0.9,390,2.551,485,4.156,486,2.065,487,3.107,488,2.065,489,2.065,490,2.065,491,2.065,492,2.065,493,2.065,494,3.412,495,3.412,496,2.551,497,2.551,498,2.551,499,2.551,500,2.551,501,3.107]],["title/components/RegisterComponent.html",[0,0.056,51,0.685]],["body/components/RegisterComponent.html",[0,0.077,1,0.504,2,1.124,3,0.294,4,0.248,5,0.868,6,0.868,7,0.868,8,0.248,10,0.868,11,0.997,12,0.877,14,0.641,16,0.248,17,0.641,19,0.494,20,0.041,21,0.869,24,1.585,26,0.54,27,0.248,28,0.294,29,0.294,30,0.632,31,1.248,32,1.248,33,0.868,34,1.523,35,0.868,36,1.293,37,0.868,38,0.446,39,0.868,40,0.504,41,0.868,42,0.565,43,0.868,44,0.504,45,0.868,46,0.565,47,0.782,48,0.868,49,0.446,50,0.868,51,1.039,52,0.868,53,0.565,54,0.868,55,0.868,56,0.868,57,0.017,58,0.024,59,0.017,83,1.34,86,0.565,88,0.868,110,0.704,111,1.73,113,2.781,133,1.124,137,0.812,138,1.541,144,0.724,147,1.803,153,1.248,154,1.248,156,1.803,177,1.161,178,0.632,179,1.062,181,0.812,183,1.248,185,1.46,190,1.161,191,1.011,192,0.632,198,0.868,204,2.014,207,1.596,210,1.513,222,1.513,234,1.072,349,1.34,355,1.513,378,1.718,379,1.718,380,1.541,381,1.541,382,1.541,383,1.072,384,1.072,385,1.072,414,3.159,424,2.908,426,3.179,432,3.179,434,3.612,435,1.73,436,1.73,437,1.73,438,1.73,502,2.02,503,4.137,504,3.535,505,3.535,506,3.535,507,2.46,508,2.46,509,3.535,510,2.46,511,2.46,512,2.46,513,2.46,514,2.46,515,2.46,516,2.46,517,2.46,518,2.46,519,2.46,520,2.46,521,2.46]],["title/interfaces/User.html",[110,0.853,168,0.414]],["body/interfaces/User.html",[0,0.07,3,0.322,4,0.272,8,0.272,11,0.489,12,0.43,14,0.489,16,0.272,17,0.684,19,0.653,20,0.042,21,1.083,26,0.592,27,0.272,28,0.322,29,0.322,34,0.858,44,0.552,57,0.026,58,0.026,59,0.018,72,0.891,83,1.469,86,0.62,88,0.952,98,0.858,110,1.245,114,1.659,133,1.383,137,1.181,144,0.552,168,0.374,170,1.176,176,1.706,177,0.969,178,0.693,179,0.969,181,0.62,183,0.952,185,0.952,190,0.969,191,0.772,192,0.693,198,0.952,204,1.706,207,0.952,217,1.469,353,1.057,354,1.469,364,1.469,378,2.29,379,2.29,380,2.054,381,2.054,382,2.24,383,2.054,384,2.054,385,2.054,414,2.676,421,1.897,422,2.215,423,2.215,424,1.897,426,1.897,428,2.215,432,3.059,434,3.059,435,1.897,436,1.897,437,1.897,438,1.897,439,2.215,440,2.215,441,3.098,442,2.215,443,2.215,444,2.215,445,2.215,446,2.215,447,2.215,448,2.215,449,2.215,450,2.215,451,2.215]],["title/interfaces/User-1.html",[110,0.716,168,0.348,355,1.54]],["body/interfaces/User-1.html",[0,0.07,3,0.322,4,0.273,8,0.273,11,0.49,12,0.431,14,0.49,16,0.273,17,0.685,19,0.653,20,0.042,21,1.088,26,0.592,27,0.273,28,0.322,29,0.322,49,0.49,57,0.03,58,0.026,59,0.018,72,0.892,86,0.621,88,0.954,98,0.859,110,1.419,112,1.334,133,1.385,135,1.662,137,1.182,144,0.553,148,1.662,168,0.524,170,1.178,176,1.707,177,0.97,178,0.694,179,0.97,181,0.621,183,0.954,185,0.954,190,0.97,191,0.773,192,0.694,197,1.178,198,0.954,201,1.178,207,0.954,215,1.314,227,1.314,348,2.058,350,1.836,352,1.472,353,1.059,356,1.662,357,1.9,358,2.656,359,1.9,360,1.9,361,1.9,362,1.9,363,2.656,364,1.472,365,2.656,366,1.9,367,1.9,368,1.9,369,1.9,370,1.9,371,1.9,372,1.9,373,1.9,374,1.9,375,1.9,376,1.9,377,1.9,378,2.292,379,2.292,380,2.056,381,2.056,382,2.056,383,2.056,384,2.056,385,2.056]],["title/components/UsersComponent.html",[0,0.056,53,0.685]],["body/components/UsersComponent.html",[0,0.08,1,0.539,2,1.179,3,0.314,4,0.266,5,0.929,6,0.929,7,0.929,8,0.266,10,0.929,11,1.011,12,0.889,14,0.673,16,0.266,17,0.673,19,0.443,20,0.042,21,0.779,24,1.179,26,0.512,27,0.266,28,0.314,29,0.314,30,0.676,31,1.309,32,1.309,33,0.929,34,1.482,35,0.929,36,1.499,37,0.929,38,0.477,39,0.929,40,0.539,41,0.929,42,0.605,43,0.929,44,0.539,45,0.929,46,0.605,47,0.837,48,0.929,49,0.477,50,0.929,51,0.605,52,0.929,53,1.071,54,1.8,55,0.929,56,0.929,57,0.025,58,0.025,59,0.018,86,0.605,110,1.333,137,0.852,144,0.539,153,0.929,154,0.929,177,1.197,178,0.676,179,0.676,181,0.852,190,1.103,191,0.753,192,0.676,234,1.148,347,3.019,349,2.02,350,1.28,353,1.032,354,1.434,380,1.617,381,1.617,382,1.617,383,1.617,384,1.617,385,1.617,388,3.045,494,3.045,495,3.045,496,3.045,497,3.045,498,3.045,499,3.045,500,3.045,522,2.162,523,4.295,524,3.71,525,3.71,526,2.633,527,2.633,528,2.633,529,3.71,530,3.71,531,3.71,532,3.71]],["title/coverage.html",[533,3.32]],["body/coverage.html",[0,0.106,1,0.657,8,0.324,9,2.634,19,0.383,20,0.041,38,0.582,40,0.657,42,0.737,44,0.657,46,0.737,49,0.582,51,0.737,53,0.737,57,0.022,58,0.029,59,0.022,66,1.747,72,0.657,90,2.255,110,1.214,112,1.499,130,1.973,132,2.634,168,0.751,169,1.747,171,2.926,187,1.747,194,2.923,204,1.257,342,2.985,356,2.926,409,2.634,421,2.985,452,2.634,453,2.634,502,2.634,522,2.634,533,2.634,534,3.208,535,3.208,536,3.208,537,3.208,538,4.759,539,3.208,540,3.208,541,3.208,542,5.065,543,3.208,544,4.759,545,3.208,546,2.634,547,5.268,548,3.486,549,5.413,550,2.634,551,2.985,552,3.208,553,2.255,554,3.486,555,2.634,556,2.634,557,3.208,558,3.208]],["title/dependencies.html",[63,1.95,559,2.505]],["body/dependencies.html",[20,0.041,27,0.384,57,0.026,58,0.032,59,0.026,63,2.074,65,2.342,78,3.628,79,3.332,83,2.074,88,1.344,111,2.677,123,2.677,125,3.126,126,2.074,127,3.126,128,3.126,560,3.808,561,5.854,562,3.808,563,3.808,564,3.808,565,3.808,566,3.808,567,3.808,568,3.808,569,3.808,570,3.808,571,3.808,572,3.808,573,3.808,574,3.808,575,3.808,576,3.808,577,3.808,578,3.808,579,3.808,580,3.808,581,3.808,582,3.808,583,3.808,584,3.808,585,3.808,586,3.808,587,3.808,588,3.808]],["title/miscellaneous/functions.html",[589,1.54,590,2.939]],["body/miscellaneous/functions.html",[16,0.465,20,0.036,57,0.031,58,0.036,59,0.031,551,3.24,553,3.937,589,2.834,590,3.784,591,3.784]],["title/index.html",[16,0.253,592,2.505,593,2.505]],["body/index.html",[0,0.094,4,0.366,12,0.578,20,0.031,36,1.036,57,0.025,58,0.031,59,0.025,75,2.228,103,4.664,104,4.142,123,3.23,204,1.42,470,2.975,594,4.595,595,3.624,596,5.045,597,3.624,598,3.624,599,3.624,600,5.475,601,3.624,602,3.624,603,3.624,604,3.624,605,3.624,606,3.624,607,3.624,608,3.624,609,3.624,610,3.624,611,5.045,612,5.045,613,3.624,614,5.475,615,3.624,616,3.624,617,3.624,618,3.624,619,3.624,620,3.624,621,2.975,622,4.595,623,4.595,624,5.305,625,3.624,626,4.595,627,4.595,628,3.624,629,5.305,630,3.624,631,3.624,632,3.624,633,5.045,634,3.624,635,3.624,636,3.624,637,3.624]],["title/modules.html",[62,2.202]],["body/modules.html",[20,0.036,57,0.031,58,0.036,59,0.031,61,2.486,62,2.486,79,3.715,117,2.807,638,5.285,639,5.285,640,5.285]],["title/overview.html",[641,3.32]],["body/overview.html",[1,1.182,2,1.121,20,0.041,30,0.905,38,0.903,40,1.02,42,1.144,44,1.02,46,1.144,49,0.903,51,1.144,53,1.144,57,0.024,58,0.031,59,0.024,60,1.92,61,3.31,62,1.92,63,1.92,64,2.478,65,2.168,66,1.92,67,2.478,68,2.894,69,2.894,70,2.894,71,2.894,72,1.02,73,3.174,74,2.478,75,2.168,117,3.338,118,2.894,130,2.168,170,1.537,211,2.168,355,2.168,641,2.894,642,3.526,643,3.526]],["title/miscellaneous/variables.html",[589,1.54,644,2.939]],["body/miscellaneous/variables.html",[16,0.391,19,0.649,20,0.041,22,3.822,23,3.822,57,0.026,58,0.033,59,0.026,66,2.612,163,2.728,546,3.186,548,4.463,550,3.186,551,2.728,553,2.728,554,3.186,555,3.937,556,3.937,589,2.386,591,3.186,621,3.937,644,3.186,645,4.796,646,3.881,647,3.881,648,3.881,649,4.796,650,3.881,651,4.796,652,3.881,653,3.881,654,3.881,655,3.881]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"coverage.html":{}}}],["0.9.1",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":325,"title":{},"body":{"components/FeedComponent.html":{}}}],["0/1",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":396,"title":{},"body":{"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["1",{"_index":355,"title":{"interfaces/Friend-1.html":{},"interfaces/User-1.html":{}},"body":{"components/RegisterComponent.html":{},"overview.html":{}}}],["1.16.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":331,"title":{},"body":{"components/FeedComponent.html":{}}}],["1.2em",{"_index":401,"title":{},"body":{"components/FriendComponent.html":{}}}],["1.42857",{"_index":315,"title":{},"body":{"components/FeedComponent.html":{}}}],["1.9.1",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":303,"title":{},"body":{"components/FeedComponent.html":{}}}],["12px",{"_index":308,"title":{},"body":{"components/FeedComponent.html":{}}}],["14px",{"_index":479,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["15px",{"_index":273,"title":{},"body":{"components/FeedComponent.html":{}}}],["15s",{"_index":318,"title":{},"body":{"components/FeedComponent.html":{}}}],["16px",{"_index":482,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["17px",{"_index":407,"title":{},"body":{"components/FriendComponent.html":{}}}],["1px",{"_index":309,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["2",{"_index":211,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"overview.html":{}}}],["2.896.0",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":284,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["25px",{"_index":283,"title":{},"body":{"components/FeedComponent.html":{}}}],["25rem",{"_index":483,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["2px",{"_index":268,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["2x",{"_index":328,"title":{},"body":{"components/FeedComponent.html":{}}}],["3.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":399,"title":{},"body":{"components/FriendComponent.html":{}}}],["4.3.1",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["46px",{"_index":263,"title":{},"body":{"components/FeedComponent.html":{}}}],["4x",{"_index":327,"title":{},"body":{"components/FeedComponent.html":{}}}],["5px",{"_index":302,"title":{},"body":{"components/FeedComponent.html":{}}}],["5x",{"_index":326,"title":{},"body":{"components/FeedComponent.html":{}}}],["6",{"_index":643,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":598,"title":{},"body":{"index.html":{}}}],["6.5.3",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":398,"title":{},"body":{"components/FriendComponent.html":{}}}],["6px",{"_index":307,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["7.8.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["75rem",{"_index":484,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["768px",{"_index":481,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["8.1.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["8.2.12",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":642,"title":{},"body":{"overview.html":{}}}],["929292",{"_index":334,"title":{},"body":{"components/FeedComponent.html":{}}}],["97",{"_index":400,"title":{},"body":{"components/FriendComponent.html":{}}}],["9px",{"_index":336,"title":{},"body":{"components/FeedComponent.html":{}}}],["a.navbar",{"_index":471,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["a.text",{"_index":321,"title":{},"body":{"components/FeedComponent.html":{}}}],["acacac",{"_index":324,"title":{},"body":{"components/FeedComponent.html":{}}}],["activatedroute",{"_index":358,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["actual_component",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["align",{"_index":294,"title":{},"body":{"components/FeedComponent.html":{},"components/NavMenuComponent.html":{}}}],["angular",{"_index":596,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["angular/compiler",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Friend-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"dependencies.html":{}}}],["api/comment",{"_index":232,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["api/comment/post/${it.id}`).subscribe(result",{"_index":221,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["api/friend').subscribe(result",{"_index":351,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{}}}],["api/friend/${this.username}?friendusername=${friendusername}`).subscribe(result",{"_index":376,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["api/friend/${this.username}`).subscribe(result",{"_index":371,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["api/post",{"_index":199,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["api/user",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["api/user').subscribe(result",{"_index":526,"title":{},"body":{"components/UsersComponent.html":{}}}],["api/user/${this.username}`).subscribe(result",{"_index":369,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":129,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":61,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":117,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":615,"title":{},"body":{"index.html":{}}}],["aspnet",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["auto",{"_index":291,"title":{},"body":{"components/FeedComponent.html":{}}}],["automatically",{"_index":605,"title":{},"body":{"index.html":{}}}],["aws",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["babel/compat",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":305,"title":{},"body":{"components/FeedComponent.html":{}}}],["background:#ebeef0",{"_index":259,"title":{},"body":{"components/FeedComponent.html":{}}}],["base_url",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl",{"_index":190,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["block",{"_index":286,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["body",{"_index":256,"title":{},"body":{"components/FeedComponent.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"injectables/BurritoService.html":{},"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":270,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["bottom",{"_index":272,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["box",{"_index":266,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["brand",{"_index":472,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["break",{"_index":478,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["browse",{"_index":640,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":299,"title":{},"body":{"components/FeedComponent.html":{}}}],["build",{"_index":614,"title":{},"body":{"index.html":{}}}],["burrito.service",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["burritoservice",{"_index":72,"title":{"injectables/BurritoService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"coverage.html":{},"overview.html":{}}}],["burritoservice.islogged",{"_index":162,"title":{},"body":{"injectables/BurritoService.html":{}}}],["burritoservice.local_storage_tag",{"_index":164,"title":{},"body":{"injectables/BurritoService.html":{}}}],["burritoservice.username",{"_index":167,"title":{},"body":{"injectables/BurritoService.html":{}}}],["cdd6e1",{"_index":311,"title":{},"body":{"components/FeedComponent.html":{}}}],["center",{"_index":476,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["change",{"_index":607,"title":{},"body":{"index.html":{}}}],["check",{"_index":636,"title":{},"body":{"index.html":{}}}],["child",{"_index":276,"title":{},"body":{"components/FeedComponent.html":{}}}],["city",{"_index":384,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["class",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["cli",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["client",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":118,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":120,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":119,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":609,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":459,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["color",{"_index":296,"title":{},"body":{"components/FeedComponent.html":{}}}],["comment",{"_index":169,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"coverage.html":{}}}],["commentbutton",{"_index":341,"title":{},"body":{"components/FeedComponent.html":{}}}],["comments",{"_index":189,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["console.error(\"not",{"_index":214,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["console.error(error",{"_index":354,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["console.log(\"commented",{"_index":233,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["console.log(\"could",{"_index":372,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(\"deleted",{"_index":229,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["console.log(\"posted",{"_index":213,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["console.log('unfriended",{"_index":377,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(`logged",{"_index":367,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(`name",{"_index":368,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(content",{"_index":209,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["console.log(friendusername",{"_index":375,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["console.log(result",{"_index":222,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.burritoservice.getloggedinfo",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["console.log(this.comments",{"_index":224,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["console.log(this.url",{"_index":512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.users",{"_index":528,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log(this.writer",{"_index":205,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["constructor(burritoservice",{"_index":238,"title":{},"body":{"components/FeedComponent.html":{},"components/NavMenuComponent.html":{}}}],["constructor(http",{"_index":349,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(private",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{},"components/NavMenuComponent.html":{}}}],["constructor(route",{"_index":486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(router",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["content",{"_index":172,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["context",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["country",{"_index":385,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["coverage",{"_index":533,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d3d0d0",{"_index":397,"title":{},"body":{"components/FriendComponent.html":{}}}],["data",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["data).subscribe((result",{"_index":513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["date",{"_index":173,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"interfaces/Post.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["dee2e6",{"_index":394,"title":{},"body":{"components/FriendComponent.html":{}}}],["default",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/NavMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["delete",{"_index":235,"title":{},"body":{"components/FeedComponent.html":{}}}],["delete(postid",{"_index":225,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["dependencies",{"_index":63,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":602,"title":{},"body":{"index.html":{}}}],["development",{"_index":599,"title":{},"body":{"index.html":{}}}],["directive",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":613,"title":{},"body":{"index.html":{}}}],["directory",{"_index":618,"title":{},"body":{"index.html":{}}}],["display",{"_index":287,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["dist",{"_index":617,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["dynamic",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":630,"title":{},"body":{"index.html":{}}}],["e9e9e9",{"_index":297,"title":{},"body":{"components/FeedComponent.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":380,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["end",{"_index":629,"title":{},"body":{"index.html":{}}}],["environment",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":353,"title":{},"body":{"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["execute",{"_index":626,"title":{},"body":{"index.html":{}}}],["exist",{"_index":501,"title":{},"body":{"components/ProfileComponent.html":{}}}],["export",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["exports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["false",{"_index":163,"title":{},"body":{"injectables/BurritoService.html":{},"components/NavMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["feed",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{}}}],["feed'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["feed.component.css",{"_index":182,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["feed.component.html",{"_index":180,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["feed/feed.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["feedcomponent",{"_index":38,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fetchusers",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{}}}],["fetchusers(user",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["fff",{"_index":306,"title":{},"body":{"components/FeedComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["files",{"_index":608,"title":{},"body":{"index.html":{}}}],["first",{"_index":497,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["firstname",{"_index":378,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["flag",{"_index":620,"title":{},"body":{"index.html":{}}}],["float",{"_index":288,"title":{},"body":{"components/FeedComponent.html":{}}}],["font",{"_index":312,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["footer",{"_index":274,"title":{},"body":{"components/FeedComponent.html":{}}}],["form",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["formcontrol",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["formgroup",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["formsmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["friend",{"_index":112,"title":{"interfaces/Friend.html":{},"interfaces/Friend-1.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["friend'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["friend.component.css",{"_index":346,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{}}}],["friend.component.html",{"_index":345,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{}}}],["friend.friendshipdate",{"_index":392,"title":{},"body":{"components/FriendComponent.html":{}}}],["friend.friendusername",{"_index":391,"title":{},"body":{"components/FriendComponent.html":{}}}],["friend.username",{"_index":390,"title":{},"body":{"components/FriendComponent.html":{},"components/ProfileComponent.html":{}}}],["friend/friend.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["friendcomponent",{"_index":40,"title":{"components/FriendComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["friends",{"_index":348,"title":{},"body":{"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["friendship",{"_index":389,"title":{},"body":{"components/FriendComponent.html":{}}}],["friendshipdata",{"_index":357,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["friendshipdate",{"_index":343,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{}}}],["friendusername",{"_index":344,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{},"components/ProfileComponent.html":{}}}],["full",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":590,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":632,"title":{},"body":{"index.html":{}}}],["generate",{"_index":611,"title":{},"body":{"index.html":{}}}],["generated",{"_index":595,"title":{},"body":{"index.html":{}}}],["getbaseurl",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getloggedinfo",{"_index":139,"title":{},"body":{"injectables/BurritoService.html":{}}}],["getloggedtag",{"_index":140,"title":{},"body":{"injectables/BurritoService.html":{}}}],["getting",{"_index":592,"title":{"index.html":{}},"body":{}}],["getusername",{"_index":141,"title":{},"body":{"injectables/BurritoService.html":{}}}],["go",{"_index":635,"title":{},"body":{"index.html":{}}}],["group",{"_index":300,"title":{},"body":{"components/FeedComponent.html":{}}}],["heading",{"_index":279,"title":{},"body":{"components/FeedComponent.html":{}}}],["height",{"_index":264,"title":{},"body":{"components/FeedComponent.html":{}}}],["help",{"_index":633,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":290,"title":{},"body":{"components/FeedComponent.html":{}}}],["home",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["home.component.html",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":42,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":191,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["http.get(baseurl",{"_index":350,"title":{},"body":{"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["http://localhost:4200",{"_index":604,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":177,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["httpclientmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["iasi",{"_index":519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon",{"_index":335,"title":{},"body":{"components/FeedComponent.html":{}}}],["icon.btn",{"_index":338,"title":{},"body":{"components/FeedComponent.html":{}}}],["id",{"_index":174,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["identifier",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":260,"title":{},"body":{"components/FeedComponent.html":{}}}],["implements",{"_index":183,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["import",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["important",{"_index":339,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["imports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["inject",{"_index":178,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["inject('base_url",{"_index":192,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["injectable",{"_index":130,"title":{"injectables/BurritoService.html":{}},"body":{"injectables/BurritoService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/BurritoService.html":{}}}],["input[type=text",{"_index":403,"title":{},"body":{"components/FriendComponent.html":{}}}],["interface",{"_index":168,"title":{"interfaces/Comment.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"interfaces/Post.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":170,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"interfaces/Post.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"overview.html":{}}}],["isexpanded",{"_index":457,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["islogged",{"_index":135,"title":{},"body":{"injectables/BurritoService.html":{},"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["it.password",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["it.username",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["it.username}:${it.password",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["item.content",{"_index":255,"title":{},"body":{"components/FeedComponent.html":{}}}],["item.date",{"_index":254,"title":{},"body":{"components/FeedComponent.html":{}}}],["item.username",{"_index":253,"title":{},"body":{"components/FeedComponent.html":{}}}],["jquery",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":628,"title":{},"body":{"index.html":{}}}],["last",{"_index":498,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["lastname",{"_index":379,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["left",{"_index":277,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["left:64",{"_index":406,"title":{},"body":{"components/FriendComponent.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["lg",{"_index":329,"title":{},"body":{"components/FeedComponent.html":{}}}],["line",{"_index":314,"title":{},"body":{"components/FeedComponent.html":{}}}],["loader",{"_index":128,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["loading",{"_index":388,"title":{},"body":{"components/FriendComponent.html":{},"components/UsersComponent.html":{}}}],["local_storage_tag",{"_index":136,"title":{},"body":{"injectables/BurritoService.html":{}}}],["localstorage.clear",{"_index":469,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["localstorage.getitem(\"logged",{"_index":196,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{}}}],["localstorage.length",{"_index":193,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["localstorage.setitem(\"logged",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(this.burritoservice.getloggedtag",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["logged",{"_index":165,"title":{},"body":{"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["login",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.css",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["login.component.html",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["login/login.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":44,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":460,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["map",{"_index":126,"title":{},"body":{"modules/AppServerModule.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"dependencies.html":{}}}],["mar",{"_index":340,"title":{},"body":{"components/FeedComponent.html":{}}}],["margin",{"_index":257,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["matching",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":285,"title":{},"body":{"components/FeedComponent.html":{},"components/NavMenuComponent.html":{}}}],["menu",{"_index":454,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["menu.component",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.css",{"_index":455,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.html",{"_index":456,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts",{"_index":453,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:10",{"_index":466,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:11",{"_index":462,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:18",{"_index":463,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":465,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":464,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu/nav",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":138,"title":{},"body":{"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["middle",{"_index":292,"title":{},"body":{"components/FeedComponent.html":{}}}],["min",{"_index":480,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["miscellaneous",{"_index":589,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":60,"title":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modulemaploadermodule",{"_index":124,"title":{},"body":{"modules/AppServerModule.html":{}}}],["modules",{"_index":62,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":634,"title":{},"body":{"index.html":{}}}],["muted",{"_index":320,"title":{},"body":{"components/FeedComponent.html":{}}}],["muted:focus",{"_index":323,"title":{},"body":{"components/FeedComponent.html":{}}}],["muted:hover",{"_index":322,"title":{},"body":{"components/FeedComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["nav",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["navigate",{"_index":603,"title":{},"body":{"index.html":{}}}],["navmenucomponent",{"_index":46,"title":{"components/NavMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":204,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ngfactory",{"_index":127,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["ngoninit",{"_index":207,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["nguniversal/module",{"_index":125,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["normal",{"_index":475,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["number",{"_index":176,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["object",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oidc",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["oninit",{"_index":179,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["onsubmit",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["optional",{"_index":154,"title":{},"body":{"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["out",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":289,"title":{},"body":{"components/FeedComponent.html":{}}}],["overview",{"_index":641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":559,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":282,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["panel",{"_index":265,"title":{},"body":{"components/FeedComponent.html":{}}}],["panel>:first",{"_index":280,"title":{},"body":{"components/FeedComponent.html":{}}}],["panel>:last",{"_index":275,"title":{},"body":{"components/FeedComponent.html":{}}}],["parameters",{"_index":153,"title":{},"body":{"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["password",{"_index":382,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["path",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["pathmatch",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["phone",{"_index":381,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["popper.js",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["position:absolute",{"_index":404,"title":{},"body":{"components/FriendComponent.html":{}}}],["post",{"_index":187,"title":{"interfaces/Post.html":{}},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"coverage.html":{}}}],["post.content",{"_index":252,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.date",{"_index":251,"title":{},"body":{"components/FeedComponent.html":{}}}],["post.username",{"_index":250,"title":{},"body":{"components/FeedComponent.html":{}}}],["postdata",{"_index":505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["postdata(data",{"_index":509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["postid",{"_index":175,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["postid}?username=${postusername}`).subscribe(result",{"_index":228,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["postusername",{"_index":226,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["prerendering",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":133,"title":{},"body":{"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["prod",{"_index":619,"title":{},"body":{"index.html":{}}}],["production",{"_index":621,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":201,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["profile'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.css",{"_index":361,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["profile.component.html",{"_index":360,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["profile/:username",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["profile/profile.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecomponent",{"_index":49,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profileurl",{"_index":188,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["project",{"_index":594,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["protractor",{"_index":631,"title":{},"body":{"index.html":{}}}],["provide",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":161,"title":{},"body":{"injectables/BurritoService.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":347,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{},"components/UsersComponent.html":{}}}],["radius",{"_index":271,"title":{},"body":{"components/FeedComponent.html":{}}}],["reactiveformsmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":637,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirect(path",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/NavMenuComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["register.component.css",{"_index":503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["registercomponent",{"_index":51,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reload",{"_index":606,"title":{},"body":{"index.html":{}}}],["require",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["result",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.foreach(it",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["results",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":373,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["retrieveposts",{"_index":216,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["return",{"_index":166,"title":{},"body":{"injectables/BurritoService.html":{}}}],["returns",{"_index":147,"title":{},"body":{"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["rgba(0",{"_index":395,"title":{},"body":{"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["rgba(0,0,0,0.075",{"_index":269,"title":{},"body":{"components/FeedComponent.html":{}}}],["right",{"_index":278,"title":{},"body":{"components/FeedComponent.html":{}}}],["romania",{"_index":520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{}}}],["root'},{'name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":362,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["router",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["routermodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":600,"title":{},"body":{"index.html":{}}}],["running",{"_index":622,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":610,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["searchbutton",{"_index":402,"title":{},"body":{"components/FriendComponent.html":{}}}],["section",{"_index":393,"title":{},"body":{"components/FriendComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["serve",{"_index":601,"title":{},"body":{"index.html":{}}}],["server",{"_index":123,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{},"index.html":{}}}],["servermodule",{"_index":122,"title":{},"body":{"modules/AppServerModule.html":{}}}],["setloginfo",{"_index":142,"title":{},"body":{"injectables/BurritoService.html":{}}}],["setloginfo(status",{"_index":151,"title":{},"body":{"injectables/BurritoService.html":{}}}],["setusername",{"_index":143,"title":{},"body":{"injectables/BurritoService.html":{}}}],["setusername(username",{"_index":157,"title":{},"body":{"injectables/BurritoService.html":{}}}],["sex",{"_index":383,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["shadow",{"_index":267,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["share",{"_index":236,"title":{},"body":{"components/FeedComponent.html":{}}}],["share(content",{"_index":208,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["size",{"_index":313,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["sm",{"_index":261,"title":{},"body":{"components/FeedComponent.html":{}}}],["sm>.btn",{"_index":337,"title":{},"body":{"components/FeedComponent.html":{}}}],["sm>.tag",{"_index":301,"title":{},"body":{"components/FeedComponent.html":{}}}],["haidaufamily",{"_index":470,"title":{},"body":{"components/NavMenuComponent.html":{},"index.html":{}}}],["solid",{"_index":310,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["space",{"_index":474,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["spec\\.ts",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.server.module.ts",{"_index":121,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/burrito.service.ts",{"_index":132,"title":{},"body":{"injectables/BurritoService.html":{},"coverage.html":{}}}],["src/app/burrito.service.ts:16",{"_index":146,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:20",{"_index":152,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:24",{"_index":149,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:28",{"_index":150,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:32",{"_index":158,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:7",{"_index":159,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:8",{"_index":160,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/burrito.service.ts:9",{"_index":145,"title":{},"body":{"injectables/BurritoService.html":{}}}],["src/app/feed/feed.component.ts",{"_index":171,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/feed/feed.component.ts:11",{"_index":248,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:12",{"_index":247,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:13",{"_index":249,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:14",{"_index":246,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:15",{"_index":245,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:16",{"_index":239,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:37",{"_index":241,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:40",{"_index":243,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:59",{"_index":242,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:74",{"_index":240,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:87",{"_index":244,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/friend/friend.component.ts",{"_index":342,"title":{},"body":{"interfaces/Friend.html":{},"components/FriendComponent.html":{},"coverage.html":{}}}],["src/app/friend/friend.component.ts:10",{"_index":386,"title":{},"body":{"components/FriendComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:13",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:8",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/nav",{"_index":452,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":356,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:13",{"_index":493,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:14",{"_index":492,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:15",{"_index":491,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:16",{"_index":490,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:17",{"_index":487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:41",{"_index":488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:45",{"_index":489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":502,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:12",{"_index":511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:13",{"_index":506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:35",{"_index":510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/users/users.component.ts",{"_index":522,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/users/users.component.ts:11",{"_index":525,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":593,"title":{"index.html":{}},"body":{}}],["statements",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":134,"title":{},"body":{"injectables/BurritoService.html":{}}}],["status",{"_index":155,"title":{},"body":{"injectables/BurritoService.html":{}}}],["stored",{"_index":616,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["styles",{"_index":234,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":181,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["subscribe(result",{"_index":212,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["support",{"_index":638,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":639,"title":{},"body":{"modules.html":{}}}],["table",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["tag.tag",{"_index":298,"title":{},"body":{"components/FeedComponent.html":{}}}],["tag:not(.label",{"_index":304,"title":{},"body":{"components/FeedComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":625,"title":{},"body":{"index.html":{}}}],["tests",{"_index":624,"title":{},"body":{"index.html":{}}}],["text",{"_index":319,"title":{},"body":{"components/FeedComponent.html":{},"components/NavMenuComponent.html":{}}}],["this.baseurl",{"_index":202,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.burritoservice.getloggedinfo",{"_index":364,"title":{},"body":{"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["this.burritoservice.getusername",{"_index":197,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.burritoservice.setloginfo(true",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["this.burritoservice.setusername(it.username",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["this.comments",{"_index":203,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.comments.set(it.id",{"_index":223,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.fetchusers(user",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["this.form",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.form.get('email').value",{"_index":517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form.get('firstname').value",{"_index":515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form.get('lastname').value",{"_index":516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form.get('password').value",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.form.get('phone').value",{"_index":518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form.get('username').value",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.friends",{"_index":352,"title":{},"body":{"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.http.delete(this.url",{"_index":227,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.http.get(this.baseurl",{"_index":220,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.http.get(this.url).subscribe(result",{"_index":217,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"interfaces/User.html":{}}}],["this.http.post(this.baseurl",{"_index":231,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.http.post(this.url",{"_index":210,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{},"components/RegisterComponent.html":{}}}],["this.isexpanded",{"_index":468,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.islogged",{"_index":363,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.postdata(user",{"_index":521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.profileurl",{"_index":200,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.retrieveposts",{"_index":206,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.route.snapshot.parammap.get('username",{"_index":366,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.router.navigate",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate([\"/feed",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["this.router.navigate([\"/login",{"_index":514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.url",{"_index":198,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["this.user",{"_index":370,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.username",{"_index":365,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["this.usernameparam",{"_index":467,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.users",{"_index":527,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.writer",{"_index":195,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.writtenposts",{"_index":218,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["this.writtenposts.foreach(it",{"_index":219,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["thumbnail",{"_index":295,"title":{},"body":{"components/FeedComponent.html":{}}}],["title",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":461,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["top",{"_index":281,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{}}}],["top:180px",{"_index":405,"title":{},"body":{"components/FriendComponent.html":{}}}],["top:20px",{"_index":258,"title":{},"body":{"components/FeedComponent.html":{}}}],["trans",{"_index":332,"title":{},"body":{"components/FeedComponent.html":{}}}],["transition",{"_index":317,"title":{},"body":{"components/FeedComponent.html":{}}}],["transparent",{"_index":333,"title":{},"body":{"components/FeedComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unfriend",{"_index":485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unfriend(friendusername",{"_index":374,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["unit",{"_index":623,"title":{},"body":{"index.html":{}}}],["universal",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":185,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["use",{"_index":612,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":110,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Friend-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user.city",{"_index":531,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.country",{"_index":532,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.email",{"_index":499,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.firstname",{"_index":494,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.lastname",{"_index":495,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.password",{"_index":529,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.phone",{"_index":500,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user.sex",{"_index":530,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.username",{"_index":496,"title":{},"body":{"components/ProfileComponent.html":{},"components/UsersComponent.html":{}}}],["user[\"password",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["user[\"username",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["username",{"_index":137,"title":{},"body":{"injectables/BurritoService.html":{},"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend.html":{},"interfaces/Friend-1.html":{},"components/FriendComponent.html":{},"components/LoginComponent.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"components/UsersComponent.html":{}}}],["usernameparam",{"_index":458,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["users",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["users.component.css",{"_index":523,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":524,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/user",{"_index":359,"title":{},"body":{"interfaces/Friend-1.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["users/users.component",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["userscomponent",{"_index":53,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/NavMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":644,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":597,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":293,"title":{},"body":{"components/FeedComponent.html":{}}}],["via",{"_index":627,"title":{},"body":{"index.html":{}}}],["void",{"_index":156,"title":{},"body":{"injectables/BurritoService.html":{},"components/FeedComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["webkit",{"_index":316,"title":{},"body":{"components/FeedComponent.html":{}}}],["welcome",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["white",{"_index":473,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["width",{"_index":262,"title":{},"body":{"components/FeedComponent.html":{},"components/FriendComponent.html":{},"components/NavMenuComponent.html":{}}}],["window.location.reload",{"_index":215,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Friend-1.html":{},"interfaces/Post.html":{},"components/ProfileComponent.html":{},"interfaces/User-1.html":{}}}],["word",{"_index":477,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["works",{"_index":387,"title":{},"body":{"components/FriendComponent.html":{}}}],["works!loading",{"_index":408,"title":{},"body":{"components/FriendComponent.html":{}}}],["writecomment",{"_index":237,"title":{},"body":{"components/FeedComponent.html":{}}}],["writecomment(postid",{"_index":230,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["writer",{"_index":184,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["writtenposts",{"_index":186,"title":{},"body":{"interfaces/Comment.html":{},"components/FeedComponent.html":{},"interfaces/Post.html":{}}}],["xs",{"_index":330,"title":{},"body":{"components/FeedComponent.html":{}}}],["zone.js",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFriendComponent\n\nFriendComponent\n\nAppModule -->\n\nFriendComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBurritoService\n\nBurritoService\n\nAppModule -->\n\nBurritoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FriendComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavMenuComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BurritoService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { UsersComponent } from './users/users.component';\nimport { FriendComponent } from './friend/friend.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BurritoService } from './burrito.service';\nimport { FeedComponent } from './feed/feed.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    UsersComponent,\n    FriendComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    FeedComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'user-data', component: UsersComponent },\n      { path: 'friend-data', component: FriendComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'profile/:username', component: ProfileComponent },\n      { path: 'feed', component: FeedComponent },\n    ])\n  ],\n  providers: [ BurritoService ],\n  bootstrap: [AppComponent],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AppModule { \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\n\n@NgModule({\n    imports: [AppModule, ServerModule, ModuleMapLoaderModule],\n    bootstrap: [AppComponent]\n})\nexport class AppServerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BurritoService.html":{"url":"injectables/BurritoService.html","title":"injectable - BurritoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BurritoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/burrito.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                isLogged\n                            \n                            \n                                    Private\n                                    Static\n                                LOCAL_STORAGE_TAG\n                            \n                            \n                                    Private\n                                    Static\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLoggedInfo\n                            \n                            \n                                getLoggedTag\n                            \n                            \n                                getUsername\n                            \n                            \n                                setLogInfo\n                            \n                            \n                                setUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/burrito.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/burrito.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoggedTag\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoggedTag()\n                \n            \n\n\n            \n                \n                    Defined in src/app/burrito.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsername\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/burrito.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLogInfo\n                        \n                        \n                    \n                \n            \n            \n                \nsetLogInfo(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/burrito.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUsername\n                        \n                        \n                    \n                \n            \n            \n                \nsetUsername(username)\n                \n            \n\n\n            \n                \n                    Defined in src/app/burrito.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            isLogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/burrito.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            LOCAL_STORAGE_TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/burrito.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/burrito.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BurritoService {\n  private static isLogged: boolean;\n  private static LOCAL_STORAGE_TAG: string; \n  private static username: string;\n\n  constructor() { \n    BurritoService.isLogged = false;\n    BurritoService.LOCAL_STORAGE_TAG = \"logged\";\n  }\n\n  getLoggedInfo() {\n    return BurritoService.isLogged;\n  }\n\n  setLogInfo(status: boolean) {\n    BurritoService.isLogged = status;\n  }\n\n  getLoggedTag() {\n    return BurritoService.LOCAL_STORAGE_TAG;\n  }\n\n  getUsername() {\n    return BurritoService.username;\n  }\n\n  setUsername(username) {\n    BurritoService.username = username;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed/feed.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        date\n                                \n                                \n                                        id\n                                \n                                \n                                        postID\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postID\n                                    \n                                \n                                \n                                    \n                                        postID:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { BurritoService } from '../burrito.service';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit {\n  writer: string;\n  url: string;\n  writtenPosts: Post[];\n  profileUrl: string;\n  comments: Map;\n  baseUrl: string;\n\n  constructor(\n    private burritoService: BurritoService,\n    private http: HttpClient,\n    @Inject('BASE_URL') baseUrl: string\n    ) {\n    if (localStorage.length > 0) {\n      this.writer = localStorage.getItem(\"logged\");\n    }\n    this.writer = this.burritoService.getUsername();\n    this.url = baseUrl + 'api/post';\n    this.profileUrl = baseUrl + 'profile';\n    this.baseUrl = baseUrl;\n    this.comments = new Map();\n\n    console.log(this.writer);\n  \n    this.retrievePosts();\n  }\n\n  ngOnInit() {\n  }\n\n  share(content) {\n    console.log(content);\n\n    if (localStorage.getItem(\"logged\")) {\n      this.http.post(this.url, {\n        \"id\": 2,\n        \"username\": localStorage.getItem(\"logged\"),\n        \"content\": content\n      }).subscribe(result => {\n        console.log(\"posted\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n\n  retrievePosts() {\n    this.http.get(this.url).subscribe(result => {\n      this.writtenPosts = result;\n    \n      this.writtenPosts.forEach(it => {\n        this.http.get(this.baseUrl + `api/comment/post/${it.id}`).subscribe(result => {\n          console.log(result);\n          this.comments.set(it.id, result);\n        });\n      });\n\n      console.log(this.comments);\n    });\n  }\n\n  delete(postId, postUsername) {\n    if (localStorage.getItem(\"logged\")) {\n      this.http.delete(this.url + `/${postId}?username=${postUsername}`).subscribe(result => {\n        console.log(\"Deleted the post\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n\n  writeComment(postid, content) {\n    if (localStorage.getItem(\"logged\")) {\n      this.http.post(this.baseUrl + 'api/comment', {\n        \"postID\": postid,\n        \"username\": localStorage.getItem(\"logged\"),\n        \"content\": content\n      }).subscribe(result => {\n        console.log(\"commented\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n}\n\ninterface Post {\n  id: number,\n  username: string,\n  content: string,\n  date: string\n}\n\ninterface Comment {\n  id: number,\n  postID: number,\n  username: string,\n  content: string,\n  date: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                comments\n                            \n                            \n                                profileUrl\n                            \n                            \n                                url\n                            \n                            \n                                writer\n                            \n                            \n                                writtenPosts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                retrievePosts\n                            \n                            \n                                share\n                            \n                            \n                                writeComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(burritoService: BurritoService, http: HttpClient, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed/feed.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        burritoService\n                                                  \n                                                        \n                                                                        BurritoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(postId, postUsername)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postUsername\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            retrievePosts\n                        \n                        \n                    \n                \n            \n            \n                \nretrievePosts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            share\n                        \n                        \n                    \n                \n            \n            \n                \nshare(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeComment\n                        \n                        \n                    \n                \n            \n            \n                \nwriteComment(postid, content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writtenPosts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Post[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { BurritoService } from '../burrito.service';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit {\n  writer: string;\n  url: string;\n  writtenPosts: Post[];\n  profileUrl: string;\n  comments: Map;\n  baseUrl: string;\n\n  constructor(\n    private burritoService: BurritoService,\n    private http: HttpClient,\n    @Inject('BASE_URL') baseUrl: string\n    ) {\n    if (localStorage.length > 0) {\n      this.writer = localStorage.getItem(\"logged\");\n    }\n    this.writer = this.burritoService.getUsername();\n    this.url = baseUrl + 'api/post';\n    this.profileUrl = baseUrl + 'profile';\n    this.baseUrl = baseUrl;\n    this.comments = new Map();\n\n    console.log(this.writer);\n  \n    this.retrievePosts();\n  }\n\n  ngOnInit() {\n  }\n\n  share(content) {\n    console.log(content);\n\n    if (localStorage.getItem(\"logged\")) {\n      this.http.post(this.url, {\n        \"id\": 2,\n        \"username\": localStorage.getItem(\"logged\"),\n        \"content\": content\n      }).subscribe(result => {\n        console.log(\"posted\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n\n  retrievePosts() {\n    this.http.get(this.url).subscribe(result => {\n      this.writtenPosts = result;\n    \n      this.writtenPosts.forEach(it => {\n        this.http.get(this.baseUrl + `api/comment/post/${it.id}`).subscribe(result => {\n          console.log(result);\n          this.comments.set(it.id, result);\n        });\n      });\n\n      console.log(this.comments);\n    });\n  }\n\n  delete(postId, postUsername) {\n    if (localStorage.getItem(\"logged\")) {\n      this.http.delete(this.url + `/${postId}?username=${postUsername}`).subscribe(result => {\n        console.log(\"Deleted the post\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n\n  writeComment(postid, content) {\n    if (localStorage.getItem(\"logged\")) {\n      this.http.post(this.baseUrl + 'api/comment', {\n        \"postID\": postid,\n        \"username\": localStorage.getItem(\"logged\"),\n        \"content\": content\n      }).subscribe(result => {\n        console.log(\"commented\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n}\n\ninterface Post {\n  id: number,\n  username: string,\n  content: string,\n  date: string\n}\n\ninterface Comment {\n  id: number,\n  postID: number,\n  username: string,\n  content: string,\n  date: string\n}\n    \n\n    \n        \n\n  \n    \n      \n        \n        \n          \n             Share\n          \n        \n      \n    \n    \n      \n        \n          \n          \n            \n              \n                {{ post.username }}\n                {{ post.date }}\n              \n              \n                {{ post.content }}\n              \n              \n                \n                \n                  \n                     Comment\n                  \n                  \n                     Delete\n                  \n                \n              \n            \n            \n\n            \n              \n                \n                  \n                  \n                    \n                      {{ item.username }}\n                      {{ item.date }}\n                    \n                    \n                      {{ item.content }}\n                    \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                body{\n    margin-top:20px;\n    background:#ebeef0;\n}\n\n.img-sm {\n    width: 46px;\n    height: 46px;\n}\n\n.panel {\n    box-shadow: 0 2px 0 rgba(0,0,0,0.075);\n    border-radius: 0;\n    border: 0;\n    margin-bottom: 15px;\n}\n\n.panel .panel-footer, .panel>:last-child {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n}\n\n.panel .panel-heading, .panel>:first-child {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n}\n\n.panel-body {\n    padding: 25px 20px;\n}\n\n\n.media-block .media-left {\n    display: block;\n    float: left\n}\n\n.media-block .media-right {\n    float: right\n}\n\n.media-block .media-body {\n    display: block;\n    overflow: hidden;\n    width: auto\n}\n\n.middle .media-left,\n.middle .media-right,\n.middle .media-body {\n    vertical-align: middle\n}\n\n.thumbnail {\n    border-radius: 0;\n    border-color: #e9e9e9\n}\n\n.tag.tag-sm, .btn-group-sm>.tag {\n    padding: 5px 10px;\n}\n\n.tag:not(.label) {\n    background-color: #fff;\n    padding: 6px 12px;\n    border-radius: 2px;\n    border: 1px solid #cdd6e1;\n    font-size: 12px;\n    line-height: 1.42857;\n    vertical-align: middle;\n    -webkit-transition: all .15s;\n    transition: all .15s;\n}\n.text-muted, a.text-muted:hover, a.text-muted:focus {\n    color: #acacac;\n}\n.text-sm {\n    font-size: 0.9em;\n}\n.text-5x, .text-4x, .text-5x, .text-2x, .text-lg, .text-sm, .text-xs {\n    line-height: 1.25;\n}\n\n.btn-trans {\n    background-color: transparent;\n    border-color: transparent;\n    color: #929292;\n}\n\n.btn-icon {\n    padding-left: 9px;\n    padding-right: 9px;\n}\n\n.btn-sm, .btn-group-sm>.btn, .btn-icon.btn-sm {\n    padding: 5px 10px !important;\n}\n\n.mar-top {\n    margin-top: 15px;\n}\n\n.media-body {\n    padding-left: 10px;\n}\n\n#commentButton {\n    margin-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                   Share                                                                                                            {{ post.username }}                {{ post.date }}                                            {{ post.content }}                                                                                                   Comment                                                         Delete                                                                                                                                                                                                {{ item.username }}                      {{ item.date }}                                                              {{ item.content }}                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Friend.html":{"url":"interfaces/Friend.html","title":"interface - Friend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Friend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/friend/friend.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        friendshipDate\n                                \n                                \n                                        friendUsername\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        friendshipDate\n                                    \n                                \n                                \n                                    \n                                        friendshipDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        friendUsername\n                                    \n                                \n                                \n                                    \n                                        friendUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friend',\n  templateUrl: './friend.component.html',\n  styleUrls: ['./friend.component.css']\n})\nexport class FriendComponent {\n  public friends: Friend[];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get(baseUrl + 'api/friend').subscribe(result => {\n      this.friends = result;\n    }, error => console.error(error));\n  }\n\n}\n\ninterface Friend {\n  username: string;\n  friendUsername: string;\n  friendshipDate: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Friend-1.html":{"url":"interfaces/Friend-1.html","title":"interface - Friend-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Friend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        friendshipData\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        friendshipData\n                                    \n                                \n                                \n                                    \n                                        friendshipData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BurritoService } from '../burrito.service';\n// import { User } from '../users/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  username: string;\n  user: User;\n  isLogged: boolean;\n  friends: Friend[];\n  url: string;\n  \n  constructor(\n    private route: ActivatedRoute, \n    private http: HttpClient,\n    private burritoService: BurritoService,\n    @Inject('BASE_URL') baseUrl: string\n    ) { \n    this.url = baseUrl;\n    this.isLogged = this.burritoService.getLoggedInfo();\n    this.username = this.route.snapshot.paramMap.get('username');\n    \n    console.log(`logged = ${this.isLogged} ${this.burritoService.getUsername()}`);\n    console.log(`name = ${this.username}`);\n\n    http.get(baseUrl + `api/user/${this.username}`).subscribe(result => {\n      this.user = result;\n    });\n\n    http.get(baseUrl + `api/friend/${this.username}`).subscribe(result => {\n      this.friends = result;\n    }, error => console.log(\"Could not retrieve the friends\"));\n  }\n\n  ngOnInit() {\n    \n  }\n\n  unfriend(friendUsername) {\n    console.log(friendUsername);\n    this.http.delete(this.url + `api/friend/${this.username}?friendUsername=${friendUsername}`).subscribe(result => {\n      console.log('Unfriended');\n      window.location.reload();\n    });\n  }\n}\n\ninterface User {\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  password: string;\n  sex: number;\n  city: string;\n  country: string;\n}\n\ninterface Friend {\n  username: string;\n  friendshipData: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendComponent.html":{"url":"components/FriendComponent.html","title":"component - FriendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FriendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friend/friend.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend\n            \n\n            \n                styleUrls\n                ./friend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./friend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                friends\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/friend/friend.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            friends\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Friend[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/friend/friend.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friend',\n  templateUrl: './friend.component.html',\n  styleUrls: ['./friend.component.css']\n})\nexport class FriendComponent {\n  public friends: Friend[];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get(baseUrl + 'api/friend').subscribe(result => {\n      this.friends = result;\n    }, error => console.error(error));\n  }\n\n}\n\ninterface Friend {\n  username: string;\n  friendUsername: string;\n  friendshipDate: string;\n}\n    \n\n    \n        friend works!\n\nLoading...\n\n    \n\n\n    \n        Friends\n    \n\n\n\n    \n        \n            \n                Username\n                Friend Username\n                Friendship Date\n            \n        \n        \n            \n                {{ friend.username }}\n                {{ friend.friendUsername }}\n                {{ friend.friendshipDate }}\n            \n        \n    \n\n    \n\n    \n                \n                    ./friend.component.css\n                \n                  \n  .section {\n    border-bottom: 1px solid #dee2e6 !important;\n    border: 2px solid rgba(0, 0, 0, .05);\n    box-shadow: 6px 6px 6px #d3d0d0;\n    padding: 20px 20px 20px 20px;\n    margin-top: 60px;\n    margin-left: 30px;\n    width: 97%;\n    font-size: 1.2em;\n    display: block;\n  }\n  \n  .searchButton input[type=text] {\n    position:absolute; \n    top:180px; \n    left:64%;\n    padding: 6px;\n    border: 1px solid #dee2e6 !important;\n    font-size: 17px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'friend works!Loading...                Friends                                            Username                Friend Username                Friendship Date                                                        {{ friend.username }}                {{ friend.friendUsername }}                {{ friend.friendshipDate }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \nredirect(path)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n  constructor(private router: Router) {\n\n  }\n\n  redirect(path) {\n    this.router.navigate([ path ]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Welcome\n        Register\n        Login\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Welcome        Register        Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, burritoService: BurritoService, router: Router, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        burritoService\n                                                  \n                                                        \n                                                                        BurritoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUsers\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUsers(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BurritoService } from '../burrito.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  url: string;\n\n  constructor(\n    private http: HttpClient, \n    private burritoService: BurritoService,\n    private router: Router,\n    @Inject('BASE_URL') baseUrl: string\n    ) { \n    this.form = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n\n    this.url = baseUrl + 'api/user';\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    var user = {\n      \"username\": this.form.get('username').value,\n      \"password\": this.form.get('password').value\n    };\n\n    this.fetchUsers(user);\n  }\n\n  fetchUsers(user) {\n    this.http.get(this.url).subscribe(result => {\n      if (result && !this.burritoService.getLoggedInfo()) {\n        result.forEach(it => {\n          if ((it.username === user[\"username\"]) && (it.password === user[\"password\"])) {\n            this.burritoService.setLogInfo(true);\n            this.burritoService.setUsername(it.username);\n            \n            localStorage.setItem(\"logged\", it.username);\n            this.router.navigate([\"/feed\"]);\n            // localStorage.setItem(this.burritoService.getLoggedTag(), `${it.username}:${it.password}`);\n          }\n        });\n      }\n    }, error => console.error(error));\n\n    console.log(this.burritoService.getLoggedInfo());\n  }\n}\n\ninterface User {\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  password: string;\n  sex: number;\n  city: string;\n  country: string;\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n\n        \n            \n        \n\n        \n            Login\n        \n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavMenuComponent.html":{"url":"components/NavMenuComponent.html","title":"component - NavMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav-menu/nav-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-menu\n            \n\n            \n                styleUrls\n                ./nav-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nav-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isExpanded\n                            \n                            \n                                usernameParam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapse\n                            \n                            \n                                logout\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(burritoService: BurritoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav-menu/nav-menu.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        burritoService\n                                                  \n                                                        \n                                                                        BurritoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collapse\n                        \n                        \n                    \n                \n            \n            \n                \ncollapse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-menu/nav-menu.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-menu/nav-menu.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav-menu/nav-menu.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav-menu/nav-menu.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usernameParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav-menu/nav-menu.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BurritoService } from '../burrito.service';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n  usernameParam: string;\n\n  constructor(private burritoService: BurritoService) {\n    // this.usernameParam = this.burritoService.getUsername();\n    this.usernameParam = localStorage.getItem(\"logged\");\n  }\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  logout() {\n    localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      haidaufamily\n      \n        \n      \n      \n        \n          \n            Feed\n          \n          \n            Profile\n          \n          \n            Register\n            Logout\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./nav-menu.component.css\n                \n                a.navbar-brand {\n  white-space: normal;\n  text-align: center;\n  word-break: break-all;\n}\n\nhtml {\n  font-size: 14px;\n}\n@media (min-width: 768px) {\n  html {\n    font-size: 16px;\n  }\n}\n\n.box-shadow {\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            haidaufamily                                                        Feed                                Profile                                Register            Logout                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed/feed.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        date\n                                \n                                \n                                        id\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { BurritoService } from '../burrito.service';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit {\n  writer: string;\n  url: string;\n  writtenPosts: Post[];\n  profileUrl: string;\n  comments: Map;\n  baseUrl: string;\n\n  constructor(\n    private burritoService: BurritoService,\n    private http: HttpClient,\n    @Inject('BASE_URL') baseUrl: string\n    ) {\n    if (localStorage.length > 0) {\n      this.writer = localStorage.getItem(\"logged\");\n    }\n    this.writer = this.burritoService.getUsername();\n    this.url = baseUrl + 'api/post';\n    this.profileUrl = baseUrl + 'profile';\n    this.baseUrl = baseUrl;\n    this.comments = new Map();\n\n    console.log(this.writer);\n  \n    this.retrievePosts();\n  }\n\n  ngOnInit() {\n  }\n\n  share(content) {\n    console.log(content);\n\n    if (localStorage.getItem(\"logged\")) {\n      this.http.post(this.url, {\n        \"id\": 2,\n        \"username\": localStorage.getItem(\"logged\"),\n        \"content\": content\n      }).subscribe(result => {\n        console.log(\"posted\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n\n  retrievePosts() {\n    this.http.get(this.url).subscribe(result => {\n      this.writtenPosts = result;\n    \n      this.writtenPosts.forEach(it => {\n        this.http.get(this.baseUrl + `api/comment/post/${it.id}`).subscribe(result => {\n          console.log(result);\n          this.comments.set(it.id, result);\n        });\n      });\n\n      console.log(this.comments);\n    });\n  }\n\n  delete(postId, postUsername) {\n    if (localStorage.getItem(\"logged\")) {\n      this.http.delete(this.url + `/${postId}?username=${postUsername}`).subscribe(result => {\n        console.log(\"Deleted the post\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n\n  writeComment(postid, content) {\n    if (localStorage.getItem(\"logged\")) {\n      this.http.post(this.baseUrl + 'api/comment', {\n        \"postID\": postid,\n        \"username\": localStorage.getItem(\"logged\"),\n        \"content\": content\n      }).subscribe(result => {\n        console.log(\"commented\");\n      });\n    }\n    else {\n      console.error(\"Not logged\");\n    }\n\n    window.location.reload();\n  }\n}\n\ninterface Post {\n  id: number,\n  username: string,\n  content: string,\n  date: string\n}\n\ninterface Comment {\n  id: number,\n  postID: number,\n  username: string,\n  content: string,\n  date: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                friends\n                            \n                            \n                                isLogged\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unfriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, http: HttpClient, burritoService: BurritoService, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        burritoService\n                                                  \n                                                        \n                                                                        BurritoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unfriend\n                        \n                        \n                    \n                \n            \n            \n                \nunfriend(friendUsername)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friendUsername\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            friends\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Friend[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BurritoService } from '../burrito.service';\n// import { User } from '../users/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  username: string;\n  user: User;\n  isLogged: boolean;\n  friends: Friend[];\n  url: string;\n  \n  constructor(\n    private route: ActivatedRoute, \n    private http: HttpClient,\n    private burritoService: BurritoService,\n    @Inject('BASE_URL') baseUrl: string\n    ) { \n    this.url = baseUrl;\n    this.isLogged = this.burritoService.getLoggedInfo();\n    this.username = this.route.snapshot.paramMap.get('username');\n    \n    console.log(`logged = ${this.isLogged} ${this.burritoService.getUsername()}`);\n    console.log(`name = ${this.username}`);\n\n    http.get(baseUrl + `api/user/${this.username}`).subscribe(result => {\n      this.user = result;\n    });\n\n    http.get(baseUrl + `api/friend/${this.username}`).subscribe(result => {\n      this.friends = result;\n    }, error => console.log(\"Could not retrieve the friends\"));\n  }\n\n  ngOnInit() {\n    \n  }\n\n  unfriend(friendUsername) {\n    console.log(friendUsername);\n    this.http.delete(this.url + `api/friend/${this.username}?friendUsername=${friendUsername}`).subscribe(result => {\n      console.log('Unfriended');\n      window.location.reload();\n    });\n  }\n}\n\ninterface User {\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  password: string;\n  sex: number;\n  city: string;\n  country: string;\n}\n\ninterface Friend {\n  username: string;\n  friendshipData: string;\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n              \n                {{ user.firstName }} {{ user.lastName }}\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                Username\n              \n              {{ user.username }}\n            \n            \n            \n              \n                First Name\n              \n              {{ user.firstName }}\n            \n            \n            \n                \n                  Last Name\n                \n                {{ user.lastName }}\n              \n              \n            \n              \n                Email\n              \n              {{ user.email }}\n            \n            \n            \n              \n                Phone\n              \n              {{ user.phone }}\n            \n          \n        \n\n        \n           \n              \n                  \n                    \n                      \n                        \n                      \n                    \n                    \n                      {{ friend.username }}\n                    \n                    Unfriend\n                  \n              \n          \n        \n      \n    \n  \n\n\n\n  The user does not exist\n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      {{ user.firstName }} {{ user.lastName }}                                                                                                                    Username                            {{ user.username }}                                                                  First Name                            {{ user.firstName }}                                                                      Last Name                                {{ user.lastName }}                                                                      Email                            {{ user.email }}                                                                  Phone                            {{ user.phone }}                                                                                                                                                                                                                                       {{ friend.username }}                                        Unfriend                                                                The user does not exist'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                postData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postData\n                        \n                        \n                    \n                \n            \n            \n                \npostData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n  url: string;\n\n  constructor(\n    private http: HttpClient, \n    private router: Router,\n    @Inject('BASE_URL') baseUrl: string\n    ) { \n    this.form = new FormGroup({\n      username: new FormControl(),\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      email: new FormControl(),\n      phone: new FormControl(),\n      password: new FormControl(),\n    });\n\n    this.url = baseUrl + 'api/user';\n  }\n\n  ngOnInit() {\n  }\n\n  postData(data) {\n    console.log(this.url);\n\n    this.http.post(this.url, data).subscribe((result) => {\n      console.log(result);\n      this.router.navigate([\"/login\"]);\n    });\n  }\n\n  onSubmit() {\n    var user = {\n      \"username\": this.form.get('username').value,\n      \"firstName\": this.form.get('firstName').value,\n      \"lastName\": this.form.get('lastName').value,\n      \"email\": this.form.get('email').value,\n      \"phone\": this.form.get('phone').value,\n      \"password\": this.form.get('password').value,\n      \"sex\": 1,\n      \"city\": \"Iasi\",\n      \"country\": \"Romania\"\n    }\n\n    this.postData(user)\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n\n        \n            \n        \n\n        \n            \n        \n\n        \n            \n        \n\n        \n            \n        \n\n        \n            \n        \n\n        \n            Register\n        \n    \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                Register            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        phone\n                                \n                                \n                                        sex\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BurritoService } from '../burrito.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  url: string;\n\n  constructor(\n    private http: HttpClient, \n    private burritoService: BurritoService,\n    private router: Router,\n    @Inject('BASE_URL') baseUrl: string\n    ) { \n    this.form = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n\n    this.url = baseUrl + 'api/user';\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    var user = {\n      \"username\": this.form.get('username').value,\n      \"password\": this.form.get('password').value\n    };\n\n    this.fetchUsers(user);\n  }\n\n  fetchUsers(user) {\n    this.http.get(this.url).subscribe(result => {\n      if (result && !this.burritoService.getLoggedInfo()) {\n        result.forEach(it => {\n          if ((it.username === user[\"username\"]) && (it.password === user[\"password\"])) {\n            this.burritoService.setLogInfo(true);\n            this.burritoService.setUsername(it.username);\n            \n            localStorage.setItem(\"logged\", it.username);\n            this.router.navigate([\"/feed\"]);\n            // localStorage.setItem(this.burritoService.getLoggedTag(), `${it.username}:${it.password}`);\n          }\n        });\n      }\n    }, error => console.error(error));\n\n    console.log(this.burritoService.getLoggedInfo());\n  }\n}\n\ninterface User {\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  password: string;\n  sex: number;\n  city: string;\n  country: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        phone\n                                \n                                \n                                        sex\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BurritoService } from '../burrito.service';\n// import { User } from '../users/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  username: string;\n  user: User;\n  isLogged: boolean;\n  friends: Friend[];\n  url: string;\n  \n  constructor(\n    private route: ActivatedRoute, \n    private http: HttpClient,\n    private burritoService: BurritoService,\n    @Inject('BASE_URL') baseUrl: string\n    ) { \n    this.url = baseUrl;\n    this.isLogged = this.burritoService.getLoggedInfo();\n    this.username = this.route.snapshot.paramMap.get('username');\n    \n    console.log(`logged = ${this.isLogged} ${this.burritoService.getUsername()}`);\n    console.log(`name = ${this.username}`);\n\n    http.get(baseUrl + `api/user/${this.username}`).subscribe(result => {\n      this.user = result;\n    });\n\n    http.get(baseUrl + `api/friend/${this.username}`).subscribe(result => {\n      this.friends = result;\n    }, error => console.log(\"Could not retrieve the friends\"));\n  }\n\n  ngOnInit() {\n    \n  }\n\n  unfriend(friendUsername) {\n    console.log(friendUsername);\n    this.http.delete(this.url + `api/friend/${this.username}?friendUsername=${friendUsername}`).subscribe(result => {\n      console.log('Unfriended');\n      window.location.reload();\n    });\n  }\n}\n\ninterface User {\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  password: string;\n  sex: number;\n  city: string;\n  country: string;\n}\n\ninterface Friend {\n  username: string;\n  friendshipData: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { User } from './user';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent {\n  public users: User[];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get(baseUrl + 'api/user').subscribe(result => {\n      this.users = result;\n      console.log(this.users);\n    }, error => console.error(error));\n   }\n}\n\n\n    \n\n    \n        Loading...\n\n\n    \n        \n            Username\n            First Name\n            Last Name\n            Email\n            Phone\n            Password\n            Sex\n            City\n            Country\n        \n    \n    \n        \n            {{ user.username }}\n            {{ user.firstName }}\n            {{ user.lastName }}\n            {{ user.email }}\n            {{ user.phone }}\n            {{ user.password }}\n            {{ user.sex }}\n            {{ user.city }}\n            {{ user.country }}\n        \n    \n\n    \n\n    \n                \n                    ./users.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading...                        Username            First Name            Last Name            Email            Phone            Password            Sex            City            Country                                    {{ user.username }}            {{ user.firstName }}            {{ user.lastName }}            {{ user.email }}            {{ user.phone }}            {{ user.password }}            {{ user.sex }}            {{ user.city }}            {{ user.country }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FriendComponent', 'selector': 'app-friend'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/burrito.service.ts\n            \n            injectable\n            BurritoService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/feed/feed.component.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/feed/feed.component.ts\n            \n            interface\n            Post\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/friend/friend.component.ts\n            \n            component\n            FriendComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/friend/friend.component.ts\n            \n            interface\n            Friend\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/nav-menu/nav-menu.component.ts\n            \n            component\n            NavMenuComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            interface\n            Friend\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            getBaseUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 8.2.12\n        \n            @angular/common : 8.2.12\n        \n            @angular/compiler : 8.2.12\n        \n            @angular/core : 8.2.12\n        \n            @angular/forms : 8.2.12\n        \n            @angular/platform-browser : 8.2.12\n        \n            @angular/platform-browser-dynamic : 8.2.12\n        \n            @angular/platform-server : 8.2.12\n        \n            @angular/router : 8.2.12\n        \n            @babel/compat-data : ^7.8.0\n        \n            @nguniversal/module-map-ngfactory-loader : 8.1.1\n        \n            aspnet-prerendering : ^3.0.1\n        \n            aws-sdk : ^2.896.0\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^3.3.3\n        \n            jquery : ^3.6.0\n        \n            oidc-client : ^1.9.1\n        \n            popper.js : ^1.16.0\n        \n            rxjs : ^6.5.3\n        \n            zone.js : 0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBaseUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetBaseUrl()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nhaidaufamily\nThis project was generated with Angular CLI version 6.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFriendComponent\n\nFriendComponent\n\nAppModule -->\n\nFriendComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nBurritoService\n\nBurritoService\n\nAppModule -->\n\nBurritoService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            providers   (src/.../main.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
